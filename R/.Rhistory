geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=S)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name=expression(S[hex]),
#limits=c(1,5000),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("A") +
labs(subtitle = expression(hat(S)[hex] ~ "(richness in 209,903" ~ km^2 ~ "hexagons)")) +
theme_minimal() + blank.theme
plot.gr.S
# predicted S in plots
plot.pl.S <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=S))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression(S[plot]),
#limits=c(1,5000),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("B") +
labs(subtitle = expression(hat(S)[plot] ~ "(richness in 1 ha plots)")) +
theme_minimal() + blank.theme
# predicted beta in plots
plot.beta.S <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=beta))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression(beta),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("C") +
labs(subtitle = expression(beta ~ "=" ~ hat(S)[hex]/hat(S)[plot])) +
theme_minimal() + blank.theme
# predicted region effects in the hexagons
plot.gr.smth <- ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=smooth.country)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name="Region effect",
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("D") +
labs(subtitle = expression(RE[hex] ~ "(region effects in 209,903" ~ km^2 ~ "hexagons)")) +
theme_minimal() + blank.theme
# predicted region effects in the plots
plot.pl.smth <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=smooth.plot))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
limits=c(-2, 2),
name="Region effect") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
labs(subtitle = expression(RE[plot] ~ "(region effects in 1 ha plots)")) +
theme_minimal() + blank.theme
plot.pl.smth
# predicted ratios of region effects between local and hexagon grains
plot.beta.smth <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=reg.beta))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression("Region" ~ beta),
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("F") +
labs(subtitle = expression(Delta ~ "=" ~ RE[hex] - RE[plot])) +
theme_minimal() + blank.theme
# ------------------------------------------------------------------------------
# write to file
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"))
dev.off()
install.packages("cowplot")
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"))
dev.off()
?plot_grid
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"), vjust = 1.4)
dev.off()
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"), vjust = 1.3, hjust = -0.4)
dev.off()
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"), vjust = 1, hjust = -0.4)
dev.off()
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"), vjust = 1.1, hjust = -0.1)
dev.off()
ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=smooth.country)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name="Region effect",
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("D") +
labs(subtitle = expression(s[s](Lat, Lon) ~ "(region effects in 209,903" ~ km^2 ~ "hexagons)")) +
theme_minimal() + blank.theme
ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=smooth.country)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name="Region effect",
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("D") +
labs(subtitle = expression(s[2](Lat, Lon) ~ ": region effects in 209,903" ~ km^2 ~ "hexagons")) +
theme_minimal() + blank.theme
ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=smooth.country)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name="Region effect",
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("D") +
labs(subtitle = expression(s[2](Lat, Lon)"- region effects in 209,903" ~ km^2 ~ "hexagons")) +
theme_minimal() + blank.theme
ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=smooth.country)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name="Region effect",
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("D") +
labs(subtitle = expression(s[2](Lat, Lon) ~ "- region effects in 209,903" ~ km^2 ~ "hexagons")) +
theme_minimal() + blank.theme
ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=reg.beta))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression("Region" ~ beta),
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("F") +
labs(subtitle = expression(Delta ~ "=" ~ s[2](Lat, Lon) - s[2](Lat, Lon))) +
theme_minimal() + blank.theme
# predicted S in hexagons
plot.gr.S <- ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=S)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name=expression(S[hex]),
#limits=c(1,5000),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("A") +
labs(subtitle = expression(hat(S)[hex] ~ "- richness in 209,903" ~ km^2 ~ "hexagons")) +
theme_minimal() + blank.theme
plot.gr.S
# predicted S in plots
plot.pl.S <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=S))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression(S[plot]),
#limits=c(1,5000),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("B") +
labs(subtitle = expression(hat(S)[plot] ~ "- richness in 1 ha plots")) +
theme_minimal() + blank.theme
# predicted beta in plots
plot.beta.S <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=beta))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression(beta),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("C") +
labs(subtitle = expression(beta ~ "=" ~ hat(S)[hex]/hat(S)[plot])) +
theme_minimal() + blank.theme
# predicted region effects in the hexagons
plot.gr.smth <- ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=smooth.country)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name="Region effect",
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("D") +
labs(subtitle = expression(s[2](Lat, Lon) ~ "- smooth region effects in 209,903" ~ km^2 ~ "hexagons")) +
theme_minimal() + blank.theme
# predicted region effects in the plots
plot.pl.smth <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=smooth.plot))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
limits=c(-2, 2),
name="Region effect") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
labs(subtitle = expression(s[1](Lat, Lon) ~ "- smooth region effects in 1 ha plots)")) +
theme_minimal() + blank.theme
plot.pl.smth
# predicted ratios of region effects between local and hexagon grains
plot.beta.smth <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=reg.beta))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression("Region" ~ beta),
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("F") +
labs(subtitle = expression(Delta ~ "=" ~ s[2](Lat, Lon) - s[2](Lat, Lon))) +
theme_minimal() + blank.theme
# ------------------------------------------------------------------------------
# write to file
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"), vjust = 1.1, hjust = -0.1)
dev.off()
#####
# predicted S in hexagons
plot.gr.S <- ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=S)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name=expression(S[hex]),
#limits=c(1,5000),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("A") +
labs(subtitle = expression(hat(S)[hex] ~ "- predicted richness in 209,903" ~ km^2 ~ "hexagons")) +
theme_minimal() + blank.theme
plot.gr.S
# predicted S in plots
plot.pl.S <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=S))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression(S[plot]),
#limits=c(1,5000),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("B") +
labs(subtitle = expression(hat(S)[plot] ~ "- predicted richness in 1 ha plots")) +
theme_minimal() + blank.theme
# predicted beta in plots
plot.beta.S <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=beta))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression(beta),
trans="log10") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("C") +
labs(subtitle = expression(beta ~ "=" ~ hat(S)[hex]/hat(S)[plot])) +
theme_minimal() + blank.theme
# predicted region effects in the hexagons
plot.gr.smth <- ggplot(grid5.mlf, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill="white", colour=NA, size=.2) +
geom_polygon(aes(fill=smooth.country)) +
geom_polygon(data=MAINL, aes(long, lat, group=group),
fill=NA, colour="black", size=.2) +
scale_fill_distiller(palette = "Spectral",
name="Region effect",
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("D") +
labs(subtitle = expression(s[2](Lat, Lon) ~ "- smooth region effects in 209,903" ~ km^2 ~ "hexagons")) +
theme_minimal() + blank.theme
# predicted region effects in the plots
plot.pl.smth <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=smooth.plot))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
limits=c(-2, 2),
name="Region effect") +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
labs(subtitle = expression(s[1](Lat, Lon) ~ "- smooth region effects in 1 ha plots)")) +
theme_minimal() + blank.theme
plot.pl.smth
# predicted ratios of region effects between local and hexagon grains
plot.beta.smth <- ggplot(MAINL, aes(long, lat, group=group)) +
geom_polygon(data=LINES,  aes(long, lat, group=group),
colour="darkgrey", size=0.2) +
geom_polygon(colour=NA, fill="white", size=.2) +
geom_point(data=plot.preds.ml, size=0.01,
aes(x=X, y=Y, group=NULL, colour=reg.beta))  +
geom_polygon(colour="black", fill=NA, size=.2) +
scale_colour_distiller(palette = "Spectral",
name=expression("Region" ~ beta),
limits=c(-2, 2)) +
scale_x_continuous(limits = c(-12000000, 16000000)) +
scale_y_continuous(limits = c(-6.4e+06, 8.8e+06)) +
xlab("") + ylab("") +
#ggtitle("F") +
labs(subtitle = expression(Delta ~ "=" ~ s[2](Lat, Lon) - s[2](Lat, Lon))) +
theme_minimal() + blank.theme
# ------------------------------------------------------------------------------
# write to file
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3200, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"), vjust = 1.1, hjust = -0.1)
dev.off()
library(cowplot)
tiff("../Figures/SMOOTH_prediction_grids.tif", width=4000, height=3400, res=350,
compression = "lzw")
plot_grid(plot.gr.S, plot.gr.smth,
plot.pl.S, plot.pl.smth,
plot.beta.S, plot.beta.smth,
nrow=3, ncol=2,
labels = c("a", "d", "b", "e", "c", "f"), vjust = 1.1, hjust = -0.1)
dev.off()
# clean the workspace and load the libraries
source("0_libraries_functions_settings.r")
# read the COUNTRY data (as a shapefile with data in the attribute table)
COUNTR.shp <- readOGR(dsn="../Data/COUNTRIES", layer = "COUNTRIES")
head(COUNTR.shp)
30/7.5
source("0_libraries_functions_settings.r")
ISL <- raster::raster("/media/pk33loci/Elements/GIS_data/ISLANDNESS/rasters/ALL_CLASSES_clean.tif")
CTR <- readOGR(dsn = "../Data/COUNTRIES", layer = "COUNTRIES")
pdf("../Figures/Islandness_polygons.pdf", width = 30, height = 100)
par(mfrow=c(36,10))
for(i in 1:nrow(CTR))
{
print(i)
pol <- CTR[i,]
rst <- crop(ISL, y = extent(pol))
plot(pol, main = pol@data$NAME[1])
plot(rst, axes = FALSE, box=FALSE, legend=FALSE, add=TRUE)
plot(pol, add=TRUE)
}
dev.off()
