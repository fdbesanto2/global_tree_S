nrow(PLOTS)
head(PLOTS)
PLOTS <- dplyr::select(PLOTS, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE = "Plot",
Source = Ref_long)
################################################################################
# Author: Petr Keil
# Email: pkeil@seznam.cz
# Date: April 26 2018
################################################################################
# Description: This is a set of scripts which take the raw data from the
# ../Data/PLOTS and ../Data/COUNTRIES folders, and put them together in the
# ../Data folder, from which they will be used for the main analysis.
# Also, some additional cleaning and massaging of the data is done here.
################################################################################
source("0_libraries_functions_settings.r")
PLOTS <- read.csv("../Data/PLOTS/PLOTS_with_environment.csv")
CNTRS <- readOGR(dsn = "../Data/COUNTRIES", layer = "COUNTRIES_with_environment")
#####
# Source table for the countries
sources.cntr <- data.frame(Dataset = c("Brazil_states",
"GlobalTreeDatabase",
"US_states",
"China_regions"),
Source = c("http://floradobrasil.jbrj.gov.br",
"http://www.bgci.org/global_tree_search.php?sec=globaltreesearch",
"http://bonap.net/tdc",
"Qian, H. (2013) Environmental determinants of woody plant diversity at a regional scale in China. PLoS ONE: 8, e75832."))
CNTRS@data <- left_join(CNTRS@data, sources.cntr, by = "Dataset")
################################################################################
# PROCESSING PLOTS
################################################################################
# 1. REMOVE PLOTS WITH DUPLICATED COORDINATES
duplicate.cleaner <- function(PLOTS)
# this functions finds and deletes duplicates, and gives preference to large
# plots = if two plots share coordinates, but one of them is larger, the larger
# is kept preferentially
{
PLOTS <- PLOTS[order(PLOTS$Area_ha, decreasing=TRUE),]
latlon <- data.frame(Lat = PLOTS$Lat, Lon = PLOTS$Lon)
PLOTS <- PLOTS[duplicated(latlon) == FALSE,]
PLOTS <- PLOTS[order(PLOTS$Numerical_ID),]
return(PLOTS)
}
PLOTS <- duplicate.cleaner(PLOTS)
# ------------------------------------------------------------------------------
# 2. REMOVE PLOTS THAT DON'T MEET THE STRICTER CRITERIA ON TREE DEFINITION OR DBH
good.tree.id <- PLOTS$Tree_def %in% c("trees")
good.dbh.id <- PLOTS$min_DBH_cm >= 10
good.plots <- (good.tree.id + good.dbh.id) > 0
good.plots[is.na(good.plots)] <- FALSE
PLOTS.subset <- PLOTS[good.plots,]
nrow(PLOTS.subset)
names(PLOTS)[names(PLOTS) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
names(PLOTS.subset)[names(PLOTS.subset) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
dplyr::select(PLOTS, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE = "Plot",
Source = Ref_long)
################################################################################
# Author: Petr Keil
# Email: pkeil@seznam.cz
# Date: April 26 2018
################################################################################
# Description: This is a set of scripts which take the raw data from the
# ../Data/PLOTS and ../Data/COUNTRIES folders, and put them together in the
# ../Data folder, from which they will be used for the main analysis.
# Also, some additional cleaning and massaging of the data is done here.
################################################################################
source("0_libraries_functions_settings.r")
PLOTS <- read.csv("../Data/PLOTS/PLOTS_with_environment.csv")
CNTRS <- readOGR(dsn = "../Data/COUNTRIES", layer = "COUNTRIES_with_environment")
#####
# Source table for the countries
sources.cntr <- data.frame(Dataset = c("Brazil_states",
"GlobalTreeDatabase",
"US_states",
"China_regions"),
Source = c("http://floradobrasil.jbrj.gov.br",
"http://www.bgci.org/global_tree_search.php?sec=globaltreesearch",
"http://bonap.net/tdc",
"Qian, H. (2013) Environmental determinants of woody plant diversity at a regional scale in China. PLoS ONE: 8, e75832."))
CNTRS@data <- left_join(CNTRS@data, sources.cntr, by = "Dataset")
################################################################################
# PROCESSING PLOTS
################################################################################
# 1. REMOVE PLOTS WITH DUPLICATED COORDINATES
duplicate.cleaner <- function(PLOTS)
# this functions finds and deletes duplicates, and gives preference to large
# plots = if two plots share coordinates, but one of them is larger, the larger
# is kept preferentially
{
PLOTS <- PLOTS[order(PLOTS$Area_ha, decreasing=TRUE),]
latlon <- data.frame(Lat = PLOTS$Lat, Lon = PLOTS$Lon)
PLOTS <- PLOTS[duplicated(latlon) == FALSE,]
PLOTS <- PLOTS[order(PLOTS$Numerical_ID),]
return(PLOTS)
}
PLOTS <- duplicate.cleaner(PLOTS)
# ------------------------------------------------------------------------------
# 2. REMOVE PLOTS THAT DON'T MEET THE STRICTER CRITERIA ON TREE DEFINITION OR DBH
good.tree.id <- PLOTS$Tree_def %in% c("trees")
good.dbh.id <- PLOTS$min_DBH_cm >= 10
good.plots <- (good.tree.id + good.dbh.id) > 0
good.plots[is.na(good.plots)] <- FALSE
PLOTS.subset <- PLOTS[good.plots,]
nrow(PLOTS.subset)
names(PLOTS)[names(PLOTS) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
names(PLOTS.subset)[names(PLOTS.subset) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
PLOTS <- data.frame(PLOTS, DAT_TYPE="Plot")
PLOTS <- dplyr::select(PLOTS, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE,
Source = Ref_long)
PLOTS$Area_km <- PLOTS$Area_km/100
PLOTS <- na.omit(PLOTS)
head(PLOTS)
PLOTS.subset <- dplyr::select(PLOTS.subset, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE,
Source = Ref_long)
PLOTS.subset$Area_km <- PLOTS.subset$Area_km/100
PLOTS.subset <- na.omit(PLOTS.subset)
################################################################################
# Author: Petr Keil
# Email: pkeil@seznam.cz
# Date: April 26 2018
################################################################################
# Description: This is a set of scripts which take the raw data from the
# ../Data/PLOTS and ../Data/COUNTRIES folders, and put them together in the
# ../Data folder, from which they will be used for the main analysis.
# Also, some additional cleaning and massaging of the data is done here.
################################################################################
source("0_libraries_functions_settings.r")
PLOTS <- read.csv("../Data/PLOTS/PLOTS_with_environment.csv")
CNTRS <- readOGR(dsn = "../Data/COUNTRIES", layer = "COUNTRIES_with_environment")
#####
# Source table for the countries
sources.cntr <- data.frame(Dataset = c("Brazil_states",
"GlobalTreeDatabase",
"US_states",
"China_regions"),
Source = c("http://floradobrasil.jbrj.gov.br",
"http://www.bgci.org/global_tree_search.php?sec=globaltreesearch",
"http://bonap.net/tdc",
"Qian, H. (2013) Environmental determinants of woody plant diversity at a regional scale in China. PLoS ONE: 8, e75832."))
CNTRS@data <- left_join(CNTRS@data, sources.cntr, by = "Dataset")
################################################################################
# PROCESSING PLOTS
################################################################################
# 1. REMOVE PLOTS WITH DUPLICATED COORDINATES
duplicate.cleaner <- function(PLOTS)
# this functions finds and deletes duplicates, and gives preference to large
# plots = if two plots share coordinates, but one of them is larger, the larger
# is kept preferentially
{
PLOTS <- PLOTS[order(PLOTS$Area_ha, decreasing=TRUE),]
latlon <- data.frame(Lat = PLOTS$Lat, Lon = PLOTS$Lon)
PLOTS <- PLOTS[duplicated(latlon) == FALSE,]
PLOTS <- PLOTS[order(PLOTS$Numerical_ID),]
return(PLOTS)
}
PLOTS <- duplicate.cleaner(PLOTS)
# ------------------------------------------------------------------------------
# 2. REMOVE PLOTS THAT DON'T MEET THE STRICTER CRITERIA ON TREE DEFINITION OR DBH
good.tree.id <- PLOTS$Tree_def %in% c("trees")
good.dbh.id <- PLOTS$min_DBH_cm >= 10
good.plots <- (good.tree.id + good.dbh.id) > 0
good.plots[is.na(good.plots)] <- FALSE
PLOTS.subset <- PLOTS[good.plots,]
nrow(PLOTS.subset)
names(PLOTS)[names(PLOTS) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
names(PLOTS.subset)[names(PLOTS.subset) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
PLOTS.subset <- data.frame(PLOTS.subset, DAT_TYPE="Plot")
PLOTS.subset <- dplyr::select(PLOTS.subset, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE,
Source = Ref_long)
PLOTS.subset$Area_km <- PLOTS.subset$Area_km/100
head(PLOTS.subset)
CNTRS.dat <- data.frame(CNTRS.dat, DAT_TYPE="Country")
CNTRS.dat <- data.frame(CNTRS@data, DAT_TYPE="Country")
CNTRS.dat <- dplyr::select(CNTRS.dat, Aggregated, Dataset, Loc_ID = NAME, Lat, Lon, Area_km,
S, N = TREE_DENS, min_DBH_cm, GPP, ET, ANN_T, WARM_T,
ISO_T, MIN_P, P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_3, DAT_TYPE,
Source = Ref_long)
head(CNTRS.dat)
CNTRS.dat <- dplyr::select(CNTRS.dat, Aggregated, Dataset, Loc_ID = NAME, Lat, Lon, Area_km,
S, N = TREE_DENS, min_DBH_cm, GPP, ET, ANN_T, WARM_T,
ISO_T, MIN_P, P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_3, DAT_TYPE,
Source = Source)
head(CNTRS.dat)
# remove Antarctica and Oceania
CNTRS.dat <- CNTRS.dat[CNTRS.dat$REALM!="Antarctic",]
CNTRS.dat <- CNTRS.dat[CNTRS.dat$REALM!="Oceania",]
# remove NA's in the Dataset field
CNTRS.dat <- na.omit(CNTRS.dat)
# fix REALM_PK for China, US and Brazil
CNTRS.dat$REALM_PK <- as.character(CNTRS.dat$REALM_PK )
CNTRS.dat[CNTRS.dat$Loc_ID == "China", 'REALM_PK'] <- "Indo-Malay"
CNTRS.dat[CNTRS.dat$Loc_ID == "United States",'REALM_PK'] <- "Nearctic"
CNTRS.dat[CNTRS.dat$Loc_ID == "Brazil",'REALM_PK'] <- "Neotropic"
# create an indicator vector for the level of aggregation
Aggregated <- as.character(dplyr::select(CNTRS.dat, Aggregated)[,1])
# remove the large aggregated spatial units (China, US, Brazil)
CNTRS.fine <- CNTRS.dat[CNTRS.dat$Loc_ID %in% c("China", "United States", "Brazil") == FALSE,]
CNTRS.fine <- na.omit(CNTRS.fine)
# remove the Aggregated field
CNTRS.fine <- CNTRS.fine[,-1]
ALL <- rbind(PLOTS, CNTRS.fine)
head(CNTRS.fine)
names(CNTRS.fine)
names(PLOTS)
################################################################################
# Author: Petr Keil
# Email: pkeil@seznam.cz
# Date: April 26 2018
################################################################################
# Description: This is a set of scripts which take the raw data from the
# ../Data/PLOTS and ../Data/COUNTRIES folders, and put them together in the
# ../Data folder, from which they will be used for the main analysis.
# Also, some additional cleaning and massaging of the data is done here.
################################################################################
source("0_libraries_functions_settings.r")
PLOTS <- read.csv("../Data/PLOTS/PLOTS_with_environment.csv")
CNTRS <- readOGR(dsn = "../Data/COUNTRIES", layer = "COUNTRIES_with_environment")
#####
# Source table for the countries
sources.cntr <- data.frame(Dataset = c("Brazil_states",
"GlobalTreeDatabase",
"US_states",
"China_regions"),
Source = c("http://floradobrasil.jbrj.gov.br",
"http://www.bgci.org/global_tree_search.php?sec=globaltreesearch",
"http://bonap.net/tdc",
"Qian, H. (2013) Environmental determinants of woody plant diversity at a regional scale in China. PLoS ONE: 8, e75832."))
CNTRS@data <- left_join(CNTRS@data, sources.cntr, by = "Dataset")
################################################################################
# PROCESSING PLOTS
################################################################################
# 1. REMOVE PLOTS WITH DUPLICATED COORDINATES
duplicate.cleaner <- function(PLOTS)
# this functions finds and deletes duplicates, and gives preference to large
# plots = if two plots share coordinates, but one of them is larger, the larger
# is kept preferentially
{
PLOTS <- PLOTS[order(PLOTS$Area_ha, decreasing=TRUE),]
latlon <- data.frame(Lat = PLOTS$Lat, Lon = PLOTS$Lon)
PLOTS <- PLOTS[duplicated(latlon) == FALSE,]
PLOTS <- PLOTS[order(PLOTS$Numerical_ID),]
return(PLOTS)
}
PLOTS <- duplicate.cleaner(PLOTS)
# ------------------------------------------------------------------------------
# 2. REMOVE PLOTS THAT DON'T MEET THE STRICTER CRITERIA ON TREE DEFINITION OR DBH
good.tree.id <- PLOTS$Tree_def %in% c("trees")
good.dbh.id <- PLOTS$min_DBH_cm >= 10
good.plots <- (good.tree.id + good.dbh.id) > 0
good.plots[is.na(good.plots)] <- FALSE
PLOTS.subset <- PLOTS[good.plots,]
nrow(PLOTS.subset)
names(PLOTS)[names(PLOTS) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
names(PLOTS.subset)[names(PLOTS.subset) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
# ------------------------------------------------------------------------------
# 3. SELECT ONLY THE VARIABLES RELEVANT FOR THE ANALYSES
PLOTS <- data.frame(PLOTS, DAT_TYPE="Plot")
PLOTS <- dplyr::select(PLOTS, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE,
Source = Ref_long)
PLOTS$Area_km <- PLOTS$Area_km/100
PLOTS <- na.omit(PLOTS)
names(PLOTS)
PLOTS.subset <- data.frame(PLOTS.subset, DAT_TYPE="Plot")
PLOTS.subset <- dplyr::select(PLOTS.subset, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE,
Source = Ref_long)
PLOTS.subset$Area_km <- PLOTS.subset$Area_km/100
PLOTS.subset <- na.omit(PLOTS.subset)
names(PLOTS.subset)
CNTRS.dat <- data.frame(CNTRS@data, DAT_TYPE="Country")
CNTRS.dat <- dplyr::select(CNTRS.dat, Aggregated, Dataset, Loc_ID = NAME, Lat, Lon, Area_km,
S, N = TREE_DENS, min_DBH_cm, GPP, ET, ANN_T, WARM_T,
ISO_T, MIN_P, P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_3, DAT_TYPE,
Source = Source)
# remove Antarctica and Oceania
CNTRS.dat <- CNTRS.dat[CNTRS.dat$REALM!="Antarctic",]
CNTRS.dat <- CNTRS.dat[CNTRS.dat$REALM!="Oceania",]
# remove NA's in the Dataset field
CNTRS.dat <- na.omit(CNTRS.dat)
# fix REALM_PK for China, US and Brazil
CNTRS.dat$REALM_PK <- as.character(CNTRS.dat$REALM_PK )
CNTRS.dat[CNTRS.dat$Loc_ID == "China", 'REALM_PK'] <- "Indo-Malay"
CNTRS.dat[CNTRS.dat$Loc_ID == "United States",'REALM_PK'] <- "Nearctic"
CNTRS.dat[CNTRS.dat$Loc_ID == "Brazil",'REALM_PK'] <- "Neotropic"
# create an indicator vector for the level of aggregation
Aggregated <- as.character(dplyr::select(CNTRS.dat, Aggregated)[,1])
# ------------------------------------------------------------------------------
# DATA WITH FULL DETAIL, DISAGGREGATED LARGE COUNTRIES, AND ALL PLOTS
# remove the large aggregated spatial units (China, US, Brazil)
CNTRS.fine <- CNTRS.dat[CNTRS.dat$Loc_ID %in% c("China", "United States", "Brazil") == FALSE,]
CNTRS.fine <- na.omit(CNTRS.fine)
# remove the Aggregated field
CNTRS.fine <- CNTRS.fine[,-1]
ALL <- rbind(PLOTS, CNTRS.fine)
# ------------------------------------------------------------------------------
# SMALLER DATA WITH CHINA, US AND BRAZIL INTACT, AND WITH ONLY THE BEST PLOTS
# remove the fine dis-aggregated parts of China, US and Brazil
CNTRS.coarse <- CNTRS.dat[CNTRS.dat$Aggregated == "Original country",]
# remove the Aggregated field
CNTRS.coarse <- CNTRS.coarse[,-1]
ALL.subset <- rbind(PLOTS.subset, CNTRS.coarse)
names(ALL.subset)
head(ALL.subset)
################################################################################
# Author: Petr Keil
# Email: pkeil@seznam.cz
# Date: April 26 2018
################################################################################
# Description: This is a set of scripts which take the raw data from the
# ../Data/PLOTS and ../Data/COUNTRIES folders, and put them together in the
# ../Data folder, from which they will be used for the main analysis.
# Also, some additional cleaning and massaging of the data is done here.
################################################################################
source("0_libraries_functions_settings.r")
PLOTS <- read.csv("../Data/PLOTS/PLOTS_with_environment.csv")
CNTRS <- readOGR(dsn = "../Data/COUNTRIES", layer = "COUNTRIES_with_environment")
#####
# Source table for the countries
sources.cntr <- data.frame(Dataset = c("Brazil_states",
"GlobalTreeDatabase",
"US_states",
"China_regions"),
Source = c("http://floradobrasil.jbrj.gov.br",
"http://www.bgci.org/global_tree_search.php?sec=globaltreesearch",
"http://bonap.net/tdc",
"Qian, H. (2013) Environmental determinants of woody plant diversity at a regional scale in China. PLoS ONE: 8, e75832."))
CNTRS@data <- left_join(CNTRS@data, sources.cntr, by = "Dataset")
################################################################################
# PROCESSING PLOTS
################################################################################
# 1. REMOVE PLOTS WITH DUPLICATED COORDINATES
duplicate.cleaner <- function(PLOTS)
# this functions finds and deletes duplicates, and gives preference to large
# plots = if two plots share coordinates, but one of them is larger, the larger
# is kept preferentially
{
PLOTS <- PLOTS[order(PLOTS$Area_ha, decreasing=TRUE),]
latlon <- data.frame(Lat = PLOTS$Lat, Lon = PLOTS$Lon)
PLOTS <- PLOTS[duplicated(latlon) == FALSE,]
PLOTS <- PLOTS[order(PLOTS$Numerical_ID),]
return(PLOTS)
}
PLOTS <- duplicate.cleaner(PLOTS)
# ------------------------------------------------------------------------------
# 2. REMOVE PLOTS THAT DON'T MEET THE STRICTER CRITERIA ON TREE DEFINITION OR DBH
good.tree.id <- PLOTS$Tree_def %in% c("trees")
good.dbh.id <- PLOTS$min_DBH_cm >= 10
good.plots <- (good.tree.id + good.dbh.id) > 0
good.plots[is.na(good.plots)] <- FALSE
PLOTS.subset <- PLOTS[good.plots,]
nrow(PLOTS.subset)
names(PLOTS)[names(PLOTS) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
names(PLOTS.subset)[names(PLOTS.subset) == "ISLAND_ST"] <- "ISL_ST" # some correction of a header
# ------------------------------------------------------------------------------
# 3. SELECT ONLY THE VARIABLES RELEVANT FOR THE ANALYSES
PLOTS <- data.frame(PLOTS, DAT_TYPE="Plot")
PLOTS <- dplyr::select(PLOTS, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE,
Source = Ref_long)
PLOTS$Area_km <- PLOTS$Area_km/100
PLOTS <- na.omit(PLOTS)
# ---------------
PLOTS.subset <- data.frame(PLOTS.subset, DAT_TYPE="Plot")
PLOTS.subset <- dplyr::select(PLOTS.subset, Dataset, Loc_ID = Plot_ID, Lat, Lon,
Area_km = Area_ha,
S, N, min_DBH_cm, GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P,
P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_PK,
DAT_TYPE,
Source = Ref_long)
PLOTS.subset$Area_km <- PLOTS.subset$Area_km/100
PLOTS.subset <- na.omit(PLOTS.subset)
################################################################################
# PROCESSING COUNTRIES
################################################################################
CNTRS.dat <- data.frame(CNTRS@data, DAT_TYPE="Country")
CNTRS.dat <- dplyr::select(CNTRS.dat, Aggregated, Dataset, Loc_ID = NAME, Lat, Lon, Area_km,
S, N = TREE_DENS, min_DBH_cm, GPP, ET, ANN_T, WARM_T,
ISO_T, MIN_P, P_SEAS,
ALT_DIF, ELONG, ISL_LS, ISL_ST, ISL_DIS,
HABITAT, REALM, REALM_PK = REALM_3, DAT_TYPE,
Source = Source)
# remove Antarctica and Oceania
CNTRS.dat <- CNTRS.dat[CNTRS.dat$REALM!="Antarctic",]
CNTRS.dat <- CNTRS.dat[CNTRS.dat$REALM!="Oceania",]
# remove NA's in the Dataset field
CNTRS.dat <- na.omit(CNTRS.dat)
# fix REALM_PK for China, US and Brazil
CNTRS.dat$REALM_PK <- as.character(CNTRS.dat$REALM_PK )
CNTRS.dat[CNTRS.dat$Loc_ID == "China", 'REALM_PK'] <- "Indo-Malay"
CNTRS.dat[CNTRS.dat$Loc_ID == "United States",'REALM_PK'] <- "Nearctic"
CNTRS.dat[CNTRS.dat$Loc_ID == "Brazil",'REALM_PK'] <- "Neotropic"
# create an indicator vector for the level of aggregation
Aggregated <- as.character(dplyr::select(CNTRS.dat, Aggregated)[,1])
# ------------------------------------------------------------------------------
# DATA WITH FULL DETAIL, DISAGGREGATED LARGE COUNTRIES, AND ALL PLOTS
# remove the large aggregated spatial units (China, US, Brazil)
CNTRS.fine <- CNTRS.dat[CNTRS.dat$Loc_ID %in% c("China", "United States", "Brazil") == FALSE,]
CNTRS.fine <- na.omit(CNTRS.fine)
# remove the Aggregated field
CNTRS.fine <- CNTRS.fine[,-1]
ALL <- rbind(PLOTS, CNTRS.fine)
# ------------------------------------------------------------------------------
# SMALLER DATA WITH CHINA, US AND BRAZIL INTACT, AND WITH ONLY THE BEST PLOTS
# remove the fine dis-aggregated parts of China, US and Brazil
CNTRS.coarse <- CNTRS.dat[CNTRS.dat$Aggregated == "Original country",]
# remove the Aggregated field
CNTRS.coarse <- CNTRS.coarse[,-1]
ALL.subset <- rbind(PLOTS.subset, CNTRS.coarse)
################################################################################
# EXPORT THE DATA
################################################################################
write.csv(ALL,
file="../Data/Main_dataset_full_detail.csv",
row.names = FALSE)
write.csv(ALL.subset,
file="../Data/Main_dataset_subset.csv",
row.names = FALSE)
# load the data
PLT <- read.csv("../Data/Main_dataset_full_detail.csv")
# calculate tree density (note the x+1 step!!)
PLT$Tree_dens <- (PLT$N + 1) / PLT$Area_km
# select only the variables of interest from the larger data.frame
DAT <- dplyr::select(PLT, S, Area_km, Tree_dens, min_DBH=min_DBH_cm,
GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P, P_SEAS, ALT_DIF, ELONG,
ISLAND = ISL_LS,
ISL_LS, ISL_ST, ISL_DIS,
REALM=REALM_PK, Lat, Lon, DAT_TYPE, Loc_ID)
summary(PLT)
# load the data
PLT <- read.csv("../Data/Main_dataset_full_detail.csv")
# calculate tree density (note the x+1 step!!)
PLT$Tree_dens <- (PLT$N + 1) / PLT$Area_km
# select only the variables of interest from the larger data.frame
DAT <- dplyr::select(PLT, S, Area_km, Tree_dens, min_DBH=min_DBH_cm,
GPP, ET, ANN_T, WARM_T, ISO_T, MIN_P, P_SEAS, ALT_DIF, ELONG,
ISLAND = ISL_LS,
ISL_LS, ISL_ST, ISL_DIS,
REALM=REALM_PK, Lat, Lon, DAT_TYPE, Loc_ID)
# order the data frame by regions and area
DAT <- DAT[order(DAT$REALM),]
# transform area and tree density
DAT$Area_km <- log(DAT$Area_km)
DAT$Tree_dens <- log(DAT$Tree_dens)
# remove NAs
DAT <- DAT[rowSums(is.na(DAT)) == 0,]
# mean and sd of Area (will be used later to bring these to their origina scale)
A.mean <- mean(DAT$Area_km)
A.sd <- sd(DAT$Area_km)
# see column names and their numbers
data.frame(names(DAT))
# means and sd of the rest of the variables
centr <- attributes(scale(DAT[,2:13]))$'scaled:center'
scale <- attributes(scale(DAT[,2:13]))$'scaled:scale'
scale.tab <- data.frame(var=names(centr), centr, scale)
write.csv(scale.tab, file="scale_tab.csv", row.names = FALSE)
# do the actual scaling
DAT[,2:13] <- scale(DAT[,2:13])
summary(DAT)
